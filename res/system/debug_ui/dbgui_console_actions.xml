<root>
	<item label="Unlock all vehicles" action="$unlockAll"/>
	<item label="Obtain all items" action="$obtainAll"/>
	<item label="Obtain vehicle" action="$obtainVehicle" input="true" format="('%s')"/>
	<item label="Set hangar" action="$hangar.setPath">
		<param> ('hangar_v3')	</param>
		<param> ('hangar_v3_rts')	</param>
	</item>
	<item label="Add money" action="$p.stats.setMoney">
		<param label="100000000">	(100000000,100000000,100000000,100000000)	</param>
	</item>
	<item label="Set herotank" action="$setHero">
		<param> ('germany:G42_Maus') </param>
		<param> ('japan:J27_O_I_120') </param>
		<param> ('uk:GB94_Centurion_Mk5-1_RAAC') </param>
		<param> ('ussr:R54_KV-5') </param>
	</item>
	<item label="[Event Platform] markers" action="$p.">
		<param label="add marker to avatar position"> addOrRemoveMarkerTo(0) </param>
		<param label="add marker to avatar"> addOrRemoveMarkerTo(2) </param>
		<param label="remove all marker"> addOrRemoveMarkerTo(1) </param>
	</item>

	<item label="Dog Tags">
		<item label="In hangar">
			<item label="Unlock all components" action="$p.dogTags.unlockAllComponentsDev()"/>
		</item>

		<item label="In battle">
			<item label="Random victim Dog Tag" action="from avatar_helpers.dog_tags_helpers import DogTagsHelpers; DogTagsHelpers.showRandomVictimDogTag()"/>
			<item label="Random killer Dog Tag" action="from avatar_helpers.dog_tags_helpers import DogTagsHelpers; DogTagsHelpers.showRandomKillerDogTag()"/>
		</item>
	</item>

	<item label="Order of War - RTS">
		<item label="Hangar">
			<item label="Add 1x7 currency" action="$p.tokens.configureToken($p.serverSettings['rts_config']['metaEconomics']['currency1x7Token'], 10000, 3600 * 24 * 365)"/>
			<item label="Add 1x1 currency" action="$p.tokens.configureToken($p.serverSettings['rts_config']['metaEconomics']['currency1x1Token'], 10000, 3600 * 24 * 365)"/>
			<item label="Add item into collection" action="$p.tokens.configureToken('rts:meta:collection_item', 1, 3600 * 24 * 365)"/>
			<item label="Complete collection" action="$p.tokens.configureToken('rts:meta:collection_item', 18, 3600 * 24 * 365)"/>

			<item label="Set default 1x7 roster" action="$p.setAIRoster(39, {'vehicles': [7169, 15697, 3473, 13857, 64529, 19969, 15953], 'rtsManners': [2, 2, 2, 2, 2, 2, 2], 'supplies': [60817, 60305, 60049]})"/>
			<item label="Set default 1x1 roster" action="$p.setAIRoster(40, {'vehicles': [7169, 15697, 3473, 19969, 64529, 19201, 15953], 'rtsManners': [2, 2, 2, 2, 2, 2, 2], 'supplies': [60817, 60561, 60049]})"/>

			<!-- RTS Bootcamp -->
			<item label="Run RTS Bootcamp" action="from helpers import dependency; from skeletons.gui.game_control import IRTSBattlesController; dependency.instance(IRTSBattlesController).runRTSBootcamp()"/>
			<item label="Mark RTS Bootcamp Incomplete" action="from gui.rts_battles.rts_helpers import markRTSBootcampComplete; markRTSBootcampComplete(False)"/>
		</item>
	</item>

	<item label="Battle Notifier">
			<item label="ShowWin" action="$battle_notifier.showWin()"/>
			<item label="ShowDraw" action="$battle_notifier.showDraw()"/>
			<item label="ShowLose" action="$battle_notifier.showLose()"/>
			<item label="ShowQueuing" action="$battle_notifier.createQueue()"/>
	</item>

	<item label="Daily Quests">
			<item label="Complete Quest" action="$p.stats.completeDailyQuest">
				<param label="easy">("easy")</param>
				<param label="medium">("medium")</param>
				<param label="hard">("hard")</param>
				<param label="bonus">("bonus")</param>
			</item>
			<item label="Reroll Quest" action="$p.stats.rerollDailyQuestDev">
				<param label="easy">("easy")</param>
				<param label="medium">("medium")</param>
				<param label="hard">("hard")</param>
				<param label="bonus">("bonus")</param>
			</item>
			<item label="Reset Reroll" action="$p.stats.resetRerollTimeout()"/>
			<item label="Set Epic Reward Tokens" action="$p.stats.setEpicRewardTokens" input="true" format="(%s)"/>
	</item>
	
	<item label="Shortcuts">
		<item label="In battle (CAPSLOCK+)...">
			<item label="Heel self 1" />
			<item label="Reload gun 2" />
			<item label="Set self on fire 3" />
			<item label="Explode self 4" />
			<item label="Break left track 5" />
			<item label="Break right track 6" />
			<item label="Destroy self 7" />
			<item label="Kill engine 8" />
			<item label="Damage self ammo bay 9" />
			<item label="Damage self fuel tank 0" />
			<item label="Damage self engine -" />
			<item label=" " />
			<item label="Navigate to shot point C" />
			<item label="Toggle client filters F" />	
			<item label="Cruise control forward G" />
			<item label="Respawn self K" />
			<item label="Toggle teleport N" />
			<item label="Roll self O" />
			<item label="Capture closest base P" />
			<item label="Teleport to shot point Q" />
			<item label="Back self on tracks R" />
			<item label="Log tkill ratings T" />
			<item label="Set signal V" />
			<item label="Toggle pause AI 'PAUSE'" />
			<item label="Kill all enemies 'BACKSLASH'" />
			<item label="  " />			
			<item label="Toggle wide view F1" />
			<item label="Toggle avatar fly fast F2" />
			<item label="Toggle avatar fly slow F3" />
			<item label="Screenshot F9" />
			<item label="GUI debug panel F10" />
		</item>
	</item>

	<item label="Switch Mode Selector Toolset" action="from gui.development.ui.mode_selector.mode_selector_toolset import showToolset; showToolset()"/>
</root>